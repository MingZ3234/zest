fail.run=Failed to execute unit test
no.annotation.zest=No @ZestTest annotation found
file.found=File (%1$s) was not found
no.data=No test case data found

parse=Failed to parse test case data (%1$s)
parse.common.attr=Failed to get attribute %2$s on node <%1$s>
parse.common.attr.unknown=Node <%1$s> does not support attribute %2$s
parse.common.class.found=Unable to get class %1$s

parse.zest=Could not find <Zest> node
parse.zest.necessary=The node <Zest> must and can only have three sub-nodes of <Description>, <Sources> and <Param> (and the order is fixed)
parse.sources.type=Under node <Sources> must be a list of node <Source>
parse.source.error=The node <Source> of the attribute Id (%1$s) failed to parse
parse.source.necessary=The node <Source> must have only two nodes <Init> and <Verify> (and the order is fixed)
parse.source.id.empty=The attribute Id of node <Source> is empty
parse.source.id.duplicate=Duplicate attribute Id (%1$s) of node <Source>
parse.source.init.error=Node <Init> parse failed
parse.source.verify.error=Node <Verify> parse failed
parse.source.operation.match=According to the bound operator (%1$s), node <%2$s> must be a list of node <%3$s>
parse.source.operation.unknown=Unsupported operator (%1$s)
parse.source.operation.none=No binding operator

parse.table.meta=Failed to parse database MetaData
parse.table.data=Except for the optional <Sorts> under the node <Table>, the other nodes must be <Data>

parse.collection.entity=Node <Collection> is missing attribute EntityClass

parse.sort.type=Under node <Sorts> must be a list of node <Sort>
parse.sort.children=The node <Sort> of the attribute Field (%1$s) should not have children
parse.sort.field=Node <Sort> is missing attribute Field
parse.sort.field.duplicate=Duplicate node <Sort> of attribute Field (%1$s)
parse.sort.field.exist=The field corresponding to the node <Sort> of the attribute Field (%1$s) does not exist
parse.sort.direction=For the node <Sort> of the attribute Field (%1$s), the content of the Direction attribute must be asc or desc (if it is empty, the default is asc)

parse.param.type=Under node <Param> must be a list of node <ParamField>
parse.param.name.empty=The attribute Name of node <ParamField> is empty
parse.param.name.duplicate=Duplicate attribute Name (%1$s) of node <ParamField>
parse.param.none=The node <ParamField> of the attribute Name (%1$s) cannot find the corresponding attribute value in the test parameter object
parse.param.obj.load=The node <ParamField> of the attribute Name (%1$s) failed when testing the parameter object based on the content assignment
parse.param.nonsupport.map=Does not support automatic assignment of Map type attributes

parse.date=Date format like "%1$s" is not supported
parse.data.sql.type=The field "%2$s" of the table "%1$s" in the test data cannot get the corresponding database SqlType
parse.data.sql.type.unsupported=The database SqlType (%3$s) corresponding to the field "%2$s" of the table "%1$s" in the test data is not supported
parse.data.field.duplicate=The field "%2$s" of the table "%1$s" in the test data is repeatedly defined
parse.data.field.under=The form of the Field element defined by the field "%2$s" of the table "%1$s" in the test data can only be used under the Target element
parse.data.field.none=The Field element defined by the field "%2$s" of the table "%1$s" in the test data must contain a child element
parse.data.table.sort=<Sort> element must be valid under <Target>
parse.doc.obj=Source (%1$s) MongoDB Collection (%2$s) failed to create Document object at row %3$d


parse.operation=@ZestSource can only be annotated on properties of type javax.sql.DataSource, org.springframework.data.mongodb.core.MongoOperations or org.springframework.data.redis.core.RedisOperations

duplicate.operation=@ZestSource's value="%1$s" is set repeatedly

operation.unsupported=The operator %2$s of the Source (%1$s) does not support
operation.mismatching=The operator of the Source (%1$s) does not match the data at the %2$s node

init.executor=Failed to create instance of executor %1$s
init.param=There can only be one parameter in the method and it must be a subclass of com.github.bookong.zest.core.testcase.ZestParam

executor.match=Executor does not match the data type

statement.evaluate=Execution of unit test "%1$s" failed
statement.run=[Zest] Test Case "%1$s"

ignore.target.data=Source (%1$s) ignores data validation
ignore.target.table=Source (%1$s) Table (%2$s) ignores data validation
ignore.target.col.unspecified=Source (%1$s) Table (%2$s) only checks the specified data

start.check.table=Start verifying the Table (%2$s) of DataSource (%1$s)...
check.ds=Failed to verify DataSource (%1$s)
check.table.size=Verify the number of data in Source (%1$s) Table (%2$s)
check.table.col.date=Source (%1$s) table (%2$s) row %3$d (%4$s) must be Date or Long
check.table.col.date.current=Source (%1$s) table (%2$s) row %3$d (%4$s) must be the current time
check.table.col.date.from.unit=Source (%1$s) table (%2$s) row %3$d (%4$s) corresponds to an unknown time unit: %5$s
check.table.col.date.from=Source (%1$s) table (%2$s) row %3$d (%4$s) must be the specified distance from the current time
check.table.col.regexp=Source (%1$s) table (%2$s) row %3$d (%4$s) must match the regular expression: %5$s
check.table.col.nullable=Source (%1$s) table (%2$s) row %3$d (%4$s) cannot be a NULL value
check.table.col.null=Source (%1$s) table (%2$s) row %3$d (%4$s) must be NULL
check.table.col.date.type=Source (%1$s) table (%2$s) row %3$d (%4$s) must be of type java.util.Date
check.table.col=Source (%1$s) table (%2$s) row %3$d (%4$s) check database value
check.doc.size=Verify the number of data in Source (%1$s) MongoDB Collection (%2$s)